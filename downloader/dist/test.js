// import React from 'react';// import ReactDOM from 'react-dom';// import axios from 'axios';import Header from './components/Header.jsx';import List from './components/List.jsx';import DownloadView from './components/DownloadView.jsx';import LoadingIndicator from './components/LoadingIndicator.jsx';// import styles from '../css/base.css';class App extends React.Component{constructor(props){super(props); this.selectItem=this.selectItem.bind(this); this.state={downloading: true, downloadProgress: 0, data: [], courseArray: [], yearArray: [], docArray: [], course: -1, year: -1, doc: -1, showDownloadView: false, docName: '', docLink: ''};}componentDidMount(){// Load data.json axios.get('../data/data.json',{onDownloadProgress: progressEvent=>{let progress=Math.floor( progressEvent.loaded / progressEvent.total * 100); this.setState({downloadProgress: progress});}}) .then(response=>{this.setState({downloading: false, data: response.data, courseArray: response.data.map(elem=> elem.course_name)});}) .catch(error=>{alert('Error loading data:\n' + error);});}selectItem(type, index){switch(type){case 'Course': this.setState({course: index, yearArray: this.state.data[index] .packs.map(elem=> elem.year), // reset year: -1, doc: -1, docArray: [], showDownloadView: false, docName: '', docLink: ''}); break; case 'Year': this.setState({year: index, docArray: this.state.data[this.state.course] .packs[index] .docs.map(elem=> elem.doc_name), // reset doc: -1, showDownloadView: false, docName: '', docLink: ''}); break; case 'Doc': let dataEntry=this.state.data[this.state.course] .packs[this.state.year] .docs[index]; this.setState({doc: index, showDownloadView: true, docName: dataEntry.doc_name, docLink: dataEntry.doc_link}); break;}}render(){// Show if loading const bodyElements=(this.state.downloading) ? <LoadingIndicator progress={this.state.downloadProgress}/> : <div id="listContainer"> <List title="Course" icon="graduation-cap" items={this.state.courseArray}selected={this.state.course}selectItem={this.selectItem}/> <List title="Year" icon="history" items={this.state.yearArray}selected={this.state.year}selectItem={this.selectItem}/> <List title="Doc" icon="file-text" items={this.state.docArray}selected={this.state.doc}selectItem={this.selectItem}/> <DownloadView enabled={this.state.showDownloadView}url={this.state.docLink}/> </div>; return( <div className="container"> <Header/>{bodyElements}</div>)}}ReactDOM.render( <App/>, document.getElementById('root'));// import React from 'react';// import FontAwesome from 'react-fontawesome';// import styles from '../../css/LinkButton.css';const LinkButton=(props)=>{if (props.download){return( <a className={props.className + ' button'}href={props.url}download> <FontAwesome name="download"/> Download{props.text}</a> )}else if (props.newTab){return( <a className={props.className + ' button'}href={props.url}target="_blank"> <FontAwesome name={props.icon}/>{props.text}</a> )}else{return( <a className={props.className + ' button'}href={props.url}> <FontAwesome name={props.icon}/>{props.text}</a> )}}export default LinkButton;// import React from 'react';// import FontAwesome from 'react-fontawesome';import ListItem from './ListItem.jsx';import SearchBox from './SearchBox.jsx';// import styles from '../../css/List.css';class List extends React.Component{constructor(props){super(props); this.activateItem=this.activateItem.bind(this);}activateItem(index){this.props.selectItem(this.props.title, index);}handleClick(){console.log('click');}render(){if (this.props.items.length > 0){const listItems=this.props.items.map((item, index)=> (index===this.props.selected) ? <ListItem key={item}index={index}text={item}activateItem={this.activateItem}active="true"/> : <ListItem key={item}index={index}text={item}activateItem={this.activateItem}/> ); return( <section> <div className="title"> <FontAwesome name={this.props.icon}/>{this.props.title}</div><SearchBox title={this.props.title + 's'}/> <ol>{listItems}</ol> </section> )}else{return( <section className="disabled"></section> )}}}export default List;// import React from 'react';// import FontAwesome from 'react-fontawesome';// import styles from '../../css/ListItem.css';const ListItem=(props)=>{const className=(props.active) ? 'active' : ''; return( <li className={className}onClick={()=>{props.activateItem(props.index);}}> <span className="listItemText">{props.text}</span> <FontAwesome name="chevron-right"/> </li>)}export default ListItem;// import React from 'react';// import styles from '../../css/LoadingIndicator.css';const LoadingIndicator=(props)=>{let isDone=(props.progress===100) ? 'done' : ''; return( <div className="loadingIndicatorFlexContainer"> <div className="loadingIndicatorContainer"> <div className="left text"> Loading data… </div><div className="right text">{props.progress}%</div><div id="progressContainer"> <div id="progressBar" className={isDone}style={{width: props.progress + '%'}}/> </div></div></div>)}export default LoadingIndicator;// import React from 'react';// import FontAwesome from 'react-fontawesome';// import styles from '../../css/SearchBox.css';class SearchBox extends React.Component{constructor(props){super(props); this.state={text: ''};}render(){return( <div className="searchBoxContainer"> <input className="searchBox" type="text" placeholder={'Search ' + this.props.title.toLowerCase() + '…'}/> <FontAwesome name="search"/> </div>)}}export default SearchBox;// import React from 'react';// import FontAwesome from 'react-fontawesome';import LinkButton from './LinkButton.jsx';// import styles from '../../css/Header.css';const Header=()=>{return( <header> <img className="item" src="../img/icon.svg" width="16" height="16"/> <div className="item headerTitle"> <FontAwesome name="cloud-download"/> Downloader </div><LinkButton url="../" text="Exit" icon="window-close" className="item right"/> </header> )}export default Header;// import React from 'react';// import FontAwesome from 'react-fontawesome';import LinkButton from './LinkButton.jsx';// import styles from '../../css/DownloadView.css';const selectOnClick=()=>{document.getElementById('linkBox').select();}const copyLink=()=>{document.getElementById('linkBox').select(); document.execCommand('Copy'); alert('Copied link');}const DownloadView=(props)=>{if (props.enabled){let fileName=/[^\/]+$/.exec(props.url); fileName=fileName[0].replace('?MOD=AJPERES',''); return( <section className="downloadView"> <div className="downloadViewFlexContainer"> <h1> <FontAwesome name="file-pdf-o"/>{fileName}</h1> <LinkButton url={props.url}download="true" className="primary"/> <div className="linkContainer"> <FontAwesome name="link"/> <input type="text" className="linkBox" id="linkBox" value={props.url}onClick={selectOnClick}readOnly/> <button className="button" onClick={copyLink}> <FontAwesome name="copy"/> Copy link </button> <LinkButton url={props.url}text="Open in new tab" icon="external-link" newTab="true"/> </div></div></section> )}else{return <section className="downloadView disabled"></section>}}export default DownloadView;
